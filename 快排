#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <iterator>
#include <stack>
#include <set>
#include <queue>
#include <map>


using namespace std;

struct Node{

	int value;
	Node *left;
	Node *right;

	Node():left(NULL),right(NULL){}
};

class Solution {
public:
	void quickSort(vector<int> &nums,int start,int end){
	
		if(start == end || start+1 == end)
			return ;

		int pivot = start;

		int i = start;
		int j = end-1;

		while(i < j)
		{
			while(j > i && nums[j] > nums[pivot])j--;
			if(j > i)
			{
				swap(nums[pivot],nums[j]);
				pivot = j;
				j--;
			}
			else
				break;

			while(i < j && nums[i] < nums[pivot])i++;
			if(i < j)
			{
				swap(nums[pivot],nums[i]);
				pivot = i;
				i++;
			}
			else
				break;
		}

		quickSort(nums,start,pivot);
		quickSort(nums,pivot+1,end);
	}

};

int main()
{
	vector<int> nums;


	int tmp;
	while(cin >> tmp)
		nums.push_back(tmp);



	Solution solu;

	solu.quickSort(nums,0,nums.size());

	for(int i = 0 ; i < nums.size() ;i++)
		cout << nums[i] << ' ';
	cout<<endl;

	return 0;
}
